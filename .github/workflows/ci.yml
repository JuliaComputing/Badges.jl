name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    strategy:
      matrix:
        version:
          - '1.3'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x86
          - x64
        exclude:
          # Remove some configurations from the build matrix to reduce CI time.
          # See https://github.com/marketplace/actions/setup-julia-environment
          # MacOS not available on x86
          - {os: 'macOS-latest', arch: 'x86'}
          # Don't test on all versions
          - {os: 'macOS-latest', version: '1.3'}
          - {os: 'macOS-latest', version: 'nightly'}
          - {os: 'windows-latest', version: '1.3'}
          - {os: 'windows-latest', version: 'nightly'}
          - {os: 'windows-latest', arch: 'x86'}
          - {arch: 'x86', version: '1.3'}
          - {arch: 'x86', version: 'nightly'}
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
